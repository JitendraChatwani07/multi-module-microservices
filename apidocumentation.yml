openapi: 3.0.1
info:
  title: User, Order, and Product Service API
  description: API documentation for User, Order, and Product Services
  version: 1.0.0
servers:
  - url: http://localhost:8081
    description: User Service
  - url: http://localhost:8082
    description: Order Service
  - url: http://localhost:8083
    description: Product Service
paths:
  /users:
    post:
      summary: Create User
      description: Creates a new user.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request.

    get:
      summary: Get All Users
      description: Retrieves a list of all users.
      tags:
        - Users
      responses:
        '200':
          description: List of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the user to retrieve.
        schema:
          type: integer
          format: int64
          
    get:
      summary: Get User by ID
      description: Retrieves a user by their ID.
      tags:
        - Users
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.

    put:
      summary: Update User
      description: Updates an existing user.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.

    delete:
      summary: Delete User
      description: Deletes a user by their ID.
      tags:
        - Users
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found.

  /orders:
    post:
      summary: Create Order
      description: Creates a new order.
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request.

    get:
      summary: Get All Orders
      description: Retrieves a list of all orders.
      tags:
        - Orders
      responses:
        '200':
          description: List of orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the order to retrieve.
        schema:
          type: integer
          format: int64
          
    get:
      summary: Get Order by ID
      description: Retrieves an order by its ID.
      tags:
        - Orders
      responses:
        '200':
          description: Order found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found.

    put:
      summary: Update Order
      description: Updates an existing order.
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found.

    delete:
      summary: Delete Order
      description: Deletes an order by its ID.
      tags:
        - Orders
      responses:
        '204':
          description: Order deleted successfully.
        '404':
          description: Order not found.

  /products:
    post:
      summary: Create Product
      description: Creates a new product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    get:
      summary: Get All Products
      description: Retrieves a list of all products.
      tags:
        - Products
      responses:
        '200':
          description: List of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the product to retrieve.
        schema:
          type: string
          
    get:
      summary: Get Product by ID
      description: Retrieves a product by its ID.
      tags:
        - Products
      responses:
        '200':
          description: Product found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.

    put:
      summary: Update Product
      description: Updates an existing product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.

    delete:
      summary: Delete Product
      description: Deletes a product by its ID.
      tags:
        - Products
      responses:
        '204':
          description: Product deleted successfully.
        '404':
          description: Product not found.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        email:
          type: string
          description: The user's email address
        phoneNumber:
          type: string
          description: The user's phone number
        address:
          type: string
          description: The user's address

    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          description: Unique identifier for the order
        userId:
          type: integer
          format: int64
          description: ID of the user who placed the order
        productIds:
          type: array
          items:
            type: string
          description: List of product IDs in the order
        totalPrice:
          type: number
          format: float
          description: Total price of the order
        orderDate:
          type: string
          format: date-time
          description: Date and time when the order was placed
        orderStatus:
          type: string
          description: Status of the order

    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product
        name:
          type: string
          description: The product's name
        description:
          type: string
          description: The product's description
        price:
          type: number
          format: float
          description: The product's price
        quantityAvailable:
          type: integer
          description: Quantity of the product available
        category:
          type: string
          description: Category of the product
